# Generated by Django 4.1 on 2025-05-13 13:36

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ("inventory", "0015_alter_stock_image"),
        ("common", "0015_contractstatus_contracttype_paymenttype"),
        (
            "transactions",
            "0065_remove_offer_currency_remove_offer_explanation_and_more",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="Contract",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        unique=True,
                        verbose_name="Sözleşme Numarası",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Tarih"
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Başlangıç Tarihi"
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Bitiş Tarihi"
                    ),
                ),
                (
                    "authorized_person",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Yetkili Kişi",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "installment_count",
                    models.PositiveSmallIntegerField(
                        default=1, verbose_name="Taksit Sayısı"
                    ),
                ),
                (
                    "advance_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="Avans Tutarı",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        default="\n{{ firma_adi }} ile sayfa 1/2’de unvan ve adresi yazılı olan kurum/kuruluş arasında iş bu {{ sozlesme_turu }} sözleşmesi akdedilmiştir. Bundan sonra taraflar {{ firma_adi }} ve müşteri olarak anılacaktır.\n\nA- GENEL ŞARTLAR:\n1- {{ firma_adi }} tarafından sözleşmesi yapılmış olan satış 1/2’de tanımlı sözleşme türü, başlangıç tarihi sözleşmenin başlangıç tarihi olarak alınacaktır.\n2- Ek servis istendiğinde servis elemanının giderleri müşteri tarafından karşılanacaktır.\n3- Mesai saatleri dışında, müşterinin servis talep etmesi durumunda, bu zaman dilimleri içerisinde kurum/kuruluşun açık bulundurulması {{ firma_adi }} servis ekibine uygun çalışma ortamı sağlanması ve gerekiyorsa personel temin edilmesi şarttır. Aksi takdirde servis verilmiş sayılır.\n4- {{ firma_adi }} tarafından satışı veya bakımı yapılacak yazılım veya donanımların bakım (garanti) süreleri; sözleşmenin türüne göre yapılacaktır.\n5- Satışı yapılmış olan {{ firma_adi }} yazılımları hiçbir şekilde, hiçbir şekilde ve yolla başka bir kurum/kuruluşa verilemez, devredilemez ve kopya edilemez. Bu gibi durumlar {{ firma_adi }} lehine tazminat hakkı doğurur.\n6- Veri güvenliğinden {{ firma_adi }} sorumlu değildir. Sorumlu olması için veri güvenliği sözleşmesi yapılmış olması gerekir.\n\nB- SÖZLEŞMEYİ (GARANTİ) İPTAL EDEN DURUMLAR:\n1- {{ firma_adi }} personeli haricinde dışarıdan yapılan müdahaleler,\n2- {{ firma_adi }} tarafından onaylanmamış parça, donanım veya yazılımların sisteme dahilinde kullanılması.\n3- Elektrik tesisatından kaynaklanan problemlerden dolayı oluşabilecek bilgi kayıpları (voltaj değişikliği veya elektrik kesintisi).\n4- {{ firma_adi }} onayı olmadan dışarıdan yazılım yüklenmesinden kaynaklanan problemler. Örnek: Virüslerden kaynaklanan bozukluklar.\n5- {{ firma_adi }} yazılımlarının kopyalanması veya üçüncü şahıslara devredilmesi.\n6- Yazılımların kullanım talimatında belirtilen hususlara ve verilen eğitimlere aykırı işlemler yapılması.\n7- Donanımın başka bir yere naklinin {{ firma_adi }}'de bildirilmemesi.\n8- Deprem, sel, su baskını gibi doğal afetler sonucu oluşan arızalar.\n9- Yangın, terör, hırsızlık, ayaklanma gibi olağanüstü durumlarda kaynaklanan hasarlar.\n10- Yedekleme ünitelerinin arızalanması yapılmamış olmasından dolayı kaynaklanan kayıplar.\n\nC- {{ firma_adi }}'nin YÜKÜMLÜLÜKLERİ:\n1- İlk satışta onarım ve montaj işlemleri sözleşme başlangıç tarihinden itibaren 1 (bir) yıl süreyle ücretsiz hizmet verilecektir.\n2- Yazılım eğitimi ve servisi yapılmış olan yazılımlarda meydana gelebilecek arızalar, müşteri tarafından {{ firma_adi }}'ye bildirildikten sonra mümkün olan en kısa sürede arıza tespit ve çözümü için {{ firma_adi }}. Eğitim destek ve Teknik destek birimleri gerekli işlemi başlatır. (bu işlemler durumun aciliyetine göre uzaktan bağlantı, telefon veya müşteri yerinde servis ile çözülmesini). Bu tip servislerin verilmesi konusunda karar verme yetkisi {{ firma_adi }}'ye aittir.\n3- {{ firma_adi }}'nin YÜKÜMLÜLÜKLERİ:\n4- {{ firma_adi }} ile yapılan sözleşme türüne göre yılda 1 (bir) kez yazılımlar için geliştirme çalışmaları ve donanımlar için bakım kontrolleri yapar.\n4- Telefon ve uzaktan bağlantı ile verilen {{ firma_adi }} destek hizmetlerinden herhangi bir ücret alınmayacaktır.\n5- Donanım Sözleşme süresi içerisinde müşteri talebi üzerine gerçekleşebilecek parça ilavesi veya donanım geliştirilmesi gibi durumlar {{ firma_adi }}'ye Teknik servisinde gerçekleştirildiğinde parça ücreti dışında teknik servis ücreti alınmayacaktır.\n6- {{ firma_adi }} bilgi sistemlerinde meydana gelebilecek teknolojik gelişmelerden müşteriyi bilgilendirecektir.\n7- {{ firma_adi }} yazılımlarında yeni modül eklenmesi gibi değişen bölümlerde müşteriye bilgi bildirilecektir.\n8- Teknik destek ve eğitim hizmetleri için ayrıca ek bir ücret talep edilmeyecektir.\n9- Müşteri talebi ile yapılacak olan bilgi güncellemeleri, müşteri tarafından yazılı olarak bildirildiği takdirde yapılacaktır.\n10- {{ firma_adi }} tarafından yapılan bakım ve onarım işlemlerinde, müşteri tarafından bildirilen arızalar dışında sistemde tespit edilen diğer arızalar da giderilecektir.\n\nD- SÖZLEŞME SÜRESİ İÇİNDE ÜCRETE TABİİ İŞLEMLER:\n1- Bakım sözleşmesi dışında kalan işlemler için ücret alınacaktır.\n2- {{ firma_adi }} tarafından yapılan bakım ve onarım işlemlerinde, müşteri tarafından bildirilen arızalar dışında sistemde tespit edilen diğer arızalar da giderilecektir.\n3- Müşteri tarafından talep edilen ek hizmetler için ayrıca ücret alınacaktır.\n4- Sözleşme süresi dışında yapılan bakım ve onarım işlemleri için ayrıca ücret alınacaktır.\n5- Sözleşme süresi dışında yapılan yazılım güncellemeleri için ayrıca ücret alınacaktır.\n6- Sözleşme süresi dışında yapılan donanım güncellemeleri için ayrıca ücret alınacaktır.\n7- Sözleşme süresi dışında yapılan eğitim hizmetleri için ayrıca ücret alınacaktır.\n8- Sözleşme süresi dışında yapılan teknik destek hizmetleri için ayrıca ücret alınacaktır.\n\nE- DİĞER HÜKÜMLER:\n1- Sözleşme bedeli, sözleşme imzalandıktan sonra {{ firma_adi }}'nin {{ banka_adi }} Bankası {{ sube_adi }} şubesindeki {{ iban_no }} IBAN numaralı hesabına yatırılacaktır.\n2- Sözleşme bedelinin ödenmemesi halinde, {{ firma_adi }} tarafından sözleşme bedeline yıllık % 10 gecikme faizi uygulanır.\n3- Sözleşme ile ilgili doğabilecek ihtilaflarda Ankara Mahkemeleri ve İcra Daireleri yetkilidir.\n4- Sözleşme, iki nüsha olarak düzenlenmiş olup, taraflarca okunup imzalandıktan sonra yürürlüğe girer.\n5- Sözleşme süresi sonunda taraflarca yeni bir sözleşme yapılmadığı takdirde, sözleşme kendiliğinden sona erer.\n",
                        verbose_name="Sözleşme Açıklama/Maddeleri",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="common.company",
                        verbose_name="Firma",
                    ),
                ),
                (
                    "contract_type",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="common.contracttype",
                        verbose_name="Sözleşme Türü",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="common.department",
                        verbose_name="Departman",
                    ),
                ),
                (
                    "institution",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="transactions.buyer",
                        verbose_name="Kurum",
                    ),
                ),
                (
                    "payment_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="common.paymenttype",
                        verbose_name="Ödeme Türü",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="common.contractstatus",
                        verbose_name="Sözleşme Durumu",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sözleşme",
                "verbose_name_plural": "Sözleşmeler",
                "ordering": ["-number"],
            },
        ),
        migrations.CreateModel(
            name="ContractBill",
            fields=[
                (
                    "contract",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="bill",
                        serialize=False,
                        to="transactions.contract",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sözleşme Formu",
                "verbose_name_plural": "Sözleşme Formları",
            },
        ),
        migrations.CreateModel(
            name="ContractItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "custom_product_name",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Ürün Adı (Elle)",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(verbose_name="Miktar")),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Birim Fiyat"
                    ),
                ),
                (
                    "contract",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="transactions.contract",
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="common.currency",
                        verbose_name="Para Birimi",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="inventory.stock",
                        verbose_name="Ürün (Stoktan Seç)",
                    ),
                ),
                (
                    "tax_rate",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="common.taxrates",
                        verbose_name="KDV Oranı",
                    ),
                ),
                (
                    "unit",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="common.unit",
                        verbose_name="Birim",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ContractInstallment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("number", models.PositiveSmallIntegerField(verbose_name="Taksit No")),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        verbose_name="Tutar (KDV Dahil)",
                    ),
                ),
                ("date", models.DateField(verbose_name="Taksit Tarihi")),
                (
                    "note",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="Not"
                    ),
                ),
                (
                    "contract",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="installments",
                        to="transactions.contract",
                    ),
                ),
            ],
        ),
    ]
